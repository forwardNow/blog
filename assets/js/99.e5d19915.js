(window.webpackJsonp=window.webpackJsonp||[]).push([[99],{509:function(t,s,a){"use strict";a.r(s);var n=a(14),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"运算符和表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运算符和表达式"}},[t._v("#")]),t._v(" 运算符和表达式")]),t._v(" "),s("p",[t._v("运算符：")]),t._v(" "),s("ul",[s("li",[t._v("就是对常量或者变量进行操作的符号。")]),t._v(" "),s("li",[t._v("比如： "),s("code",[t._v("+")]),t._v(" "),s("code",[t._v("-")]),t._v(" "),s("code",[t._v("*")]),t._v(" "),s("code",[t._v("/")])])]),t._v(" "),s("p",[t._v("表达式：")]),t._v(" "),s("ul",[s("li",[t._v("用运算符把常量或者变量连接起来的，符合 Java 语法的式子就是表达式。")]),t._v(" "),s("li",[t._v("比如："),s("code",[t._v("a + b")]),t._v(" 这个整体就是表达式。")]),t._v(" "),s("li",[t._v("而其中 "),s("code",[t._v("+")]),t._v(" 是算术运算符的一种，所以这个表达式也称之为算术表达式。")])]),t._v(" "),s("h2",{attrs:{id:"_1-算术运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-算术运算符"}},[t._v("#")]),t._v(" 1. 算术运算符")]),t._v(" "),s("h3",{attrs:{id:"_1-1-分类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-分类"}},[t._v("#")]),t._v(" 1.1. 分类")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("+")])]),t._v(" "),s("li",[s("code",[t._v("-")])]),t._v(" "),s("li",[s("code",[t._v("*")])]),t._v(" "),s("li",[s("code",[t._v("/")])]),t._v(" "),s("li",[s("code",[t._v("%")])])]),t._v(" "),s("h3",{attrs:{id:"_1-2-运算特点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-运算特点"}},[t._v("#")]),t._v(" 1.2. 运算特点")]),t._v(" "),s("p",[s("code",[t._v("+")]),t._v(" "),s("code",[t._v("-")]),t._v(" "),s("code",[t._v("*")]),t._v(" : 跟小学数学中一模一样没有任何区别.")]),t._v(" "),s("h4",{attrs:{id:"_1-2-1"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-1"}},[t._v("#")]),t._v(" 1.2.1. "),s("code",[t._v("/")])]),t._v(" "),s("p",[t._v("整数相除结果只能得到整除，如果结果想要是小数，必须要有小数参数。")]),t._v(" "),s("p",[t._v("小数直接参与运算，得到的结果有可能是不精确的。")]),t._v(" "),s("p",[t._v("案例：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3.3333333333333335")]),t._v("\n")])])]),s("h4",{attrs:{id:"_1-2-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-2"}},[t._v("#")]),t._v(" 1.2.2. "),s("code",[t._v("%")])]),t._v(" "),s("p",[t._v("取模、取余。")]),t._v(" "),s("p",[t._v("他做的也是除法运算，只不过获取的是余数而已。")]),t._v(" "),s("p",[t._v("案例：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n")])])]),s("p",[t._v("应用场景：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//可以利用取模来判断一个数是奇数还是偶数")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1  奇数")]),t._v("\n")])])]),s("h3",{attrs:{id:"_1-3-练习-数值拆分"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-练习-数值拆分"}},[t._v("#")]),t._v(" 1.3. 练习：数值拆分")]),t._v(" "),s("p",[t._v("需求：键盘录入一个三位数，将其拆分为个位、十位、百位后，打印在控制台")]),t._v(" "),s("p",[t._v("公式：")]),t._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("获取任意一个数上每一位数。\n\n个位：数字 % 10\n\n十位：数字 / 10 % 10\n\n百位：数字 / 100 % 10\n\n千位：数字 / 1000 % 10\n\n。。。以此类推。。。\n")])])]),s("p",[t._v("代码：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1.键盘录入一个三位数")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Scanner")]),t._v(" sc "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Scanner")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("in"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"请输入一个三位数"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" number "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 123")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2.获取这个三位数的个位、十位、百位并打印出来")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 个位： 数字 % 10")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" ones "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" number "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 十位： 数字 / 10 % 10")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" tens "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" number "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 百位： 数字 / 100 % 10")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" hundreds "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" number "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//输出结果")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ones"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tens"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hundreds"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"_1-4-隐式转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-隐式转换"}},[t._v("#")]),t._v(" 1.4. 隐式转换")]),t._v(" "),s("h4",{attrs:{id:"_1-4-1-概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-1-概念"}},[t._v("#")]),t._v(" 1.4.1. 概念")]),t._v(" "),s("p",[t._v("也叫自动类型提升。")]),t._v(" "),s("p",[t._v("就是把一个取值范围小的数据或者变量，赋值给另一个取值范围大的变量。")]),t._v(" "),s("p",[t._v("此时不需要我们额外写代码单独实现，是程序自动帮我们完成的。")]),t._v(" "),s("h4",{attrs:{id:"_1-4-2-提升规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-2-提升规则"}},[t._v("#")]),t._v(" 1.4.2. 提升规则")]),t._v(" "),s("ul",[s("li",[t._v("取值范围小的 和 取值范围大的 进行运算，小的会先提升为大的，再进行运算。")]),t._v(" "),s("li",[s("code",[t._v("byte")]),t._v("、"),s("code",[t._v("short")]),t._v("、"),s("code",[t._v("char")]),t._v(" 三种类型的数据在运算的时候，都会直接先提升为 "),s("code",[t._v("int")]),t._v("，然后再进行运算。")])]),t._v(" "),s("h4",{attrs:{id:"_1-4-3-取值范围从小到大的关系"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-3-取值范围从小到大的关系"}},[t._v("#")]),t._v(" 1.4.3. 取值范围从小到大的关系")]),t._v(" "),s("p",[s("code",[t._v("byte")]),t._v(" "),s("code",[t._v("short")]),t._v(" "),s("code",[t._v("int")]),t._v(" "),s("code",[t._v("long")]),t._v(" "),s("code",[t._v("float")]),t._v(" "),s("code",[t._v("double")])]),t._v(" "),s("h4",{attrs:{id:"_1-4-4-隐式转换的练习"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-4-隐式转换的练习"}},[t._v("#")]),t._v(" 1.4.4. 隐式转换的练习")]),t._v(" "),s("p",[t._v("请看下面案例是否有误，如果有问题，请说出原因，如果没有问题，请说出运算过程和运算结果")]),t._v(" "),s("h5",{attrs:{id:"_1-4-4-1-案例一"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-4-1-案例一"}},[t._v("#")]),t._v(" 1.4.4.1. 案例一")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" d "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 10.0")]),t._v("\n")])])]),s("p",[s("code",[t._v("10")]),t._v(" 是整数，整数默认是 "),s("code",[t._v("int")]),t._v(" 类型的。")]),t._v(" "),s("p",[t._v("而在取值范围的顺序中："),s("code",[t._v("byte")]),t._v(" "),s("code",[t._v("short")]),t._v(" "),s("code",[t._v("int")]),t._v(" "),s("code",[t._v("long")]),t._v(" "),s("code",[t._v("float")]),t._v(" "),s("code",[t._v("double")])]),t._v(" "),s("p",[t._v("在赋值的时候把一个 "),s("code",[t._v("int")]),t._v(" 类型的赋值给了一个 "),s("code",[t._v("double")]),t._v(" 类型的。")]),t._v(" "),s("p",[t._v("把一个小的赋值给一个大的是可以直接给的。")]),t._v(" "),s("h5",{attrs:{id:"_1-4-4-2-案例二"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-4-2-案例二"}},[t._v("#")]),t._v(" 1.4.4.2. 案例二：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可以成功赋值")]),t._v("\n")])])]),s("p",[t._v("因为 "),s("code",[t._v("byte")]),t._v(" 的取值范围是小的，"),s("code",[t._v("int")]),t._v(" 的取值范围是大的，在底层进行了隐式转换，不需要我们额外写代码单独实现，是可以直接赋值。")]),t._v(" "),s("h5",{attrs:{id:"_1-4-4-3-案例三"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-4-3-案例三"}},[t._v("#")]),t._v(" 1.4.4.3. 案例三：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20L")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ??? result = i + n;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 问变量 result 是什么类型的？")]),t._v("\n")])])]),s("p",[t._v("变量 "),s("code",[t._v("i")]),t._v(" 是 "),s("code",[t._v("int")]),t._v(" 类型的，变量 "),s("code",[t._v("n")]),t._v(" 是 "),s("code",[t._v("long")]),t._v(" 类型的。")]),t._v(" "),s("p",[t._v("而在取值范围的顺序中："),s("code",[t._v("byte")]),t._v(" "),s("code",[t._v("short")]),t._v(" "),s("code",[t._v("int")]),t._v(" "),s("code",[t._v("long")]),t._v(" "),s("code",[t._v("float")]),t._v(" "),s("code",[t._v("double")])]),t._v(" "),s("p",[t._v("变量 "),s("code",[t._v("i")]),t._v(" 里面的值会自动提升为 "),s("code",[t._v("long")]),t._v(" 类型的，最终的结果其实就是两个 "),s("code",[t._v("long")]),t._v(" 相加，那么最终的 "),s("code",[t._v("result")]),t._v(" 是 "),s("code",[t._v("long")]),t._v(" 类型的。")]),t._v(" "),s("h5",{attrs:{id:"_1-4-4-4-案例四"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-4-4-案例四"}},[t._v("#")]),t._v(" 1.4.4.4. 案例四：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100L")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" d "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ??? result = i + n + d;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 问变量 result 是什么类型的？")]),t._v("\n")])])]),s("p",[t._v("变量 "),s("code",[t._v("i")]),t._v(" 是 "),s("code",[t._v("int")]),t._v(" 类型，变量 "),s("code",[t._v("n")]),t._v(" 是 "),s("code",[t._v("long")]),t._v(" 类型，变量 "),s("code",[t._v("d")]),t._v(" 是 "),s("code",[t._v("double")]),t._v(" 类型。")]),t._v(" "),s("p",[t._v("而在取值范围的顺序中："),s("code",[t._v("byte")]),t._v(" "),s("code",[t._v("short")]),t._v(" "),s("code",[t._v("int")]),t._v(" "),s("code",[t._v("long")]),t._v(" "),s("code",[t._v("float")]),t._v(" "),s("code",[t._v("double")])]),t._v(" "),s("p",[t._v("所以变量 "),s("code",[t._v("i")]),t._v(" 和变量 "),s("code",[t._v("n")]),t._v(" 里面的值在参与运算的时候，都会进行类型提升，变成 "),s("code",[t._v("double")]),t._v("。")]),t._v(" "),s("p",[t._v("最终其实就是三个 "),s("code",[t._v("double")]),t._v(" 进行相加，那么最终的结果就是 "),s("code",[t._v("double")]),t._v(" 类型的。")]),t._v(" "),s("h5",{attrs:{id:"_1-4-4-5-案例五"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-4-5-案例五"}},[t._v("#")]),t._v(" 1.4.4.5. 案例五：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),t._v(" b1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),t._v(" b2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ??? result = b1 + b2;//int")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 问变量 result 是什么类型的？")]),t._v("\n")])])]),s("p",[t._v("因为 "),s("code",[t._v("b1")]),t._v(" 和 "),s("code",[t._v("b2")]),t._v(" 都是 "),s("code",[t._v("byte")]),t._v(" 类型的。")]),t._v(" "),s("p",[t._v("所以在参与计算的时候，变量 "),s("code",[t._v("b1")]),t._v(" 和变量 "),s("code",[t._v("b2")]),t._v(" 里面的值都会自动提升为 "),s("code",[t._v("int")]),t._v(" 类型的。")]),t._v(" "),s("p",[t._v("最终其实就是两个 "),s("code",[t._v("int")]),t._v(" 类型的相加，最终结果也是 "),s("code",[t._v("int")]),t._v(" 类型的。")]),t._v(" "),s("h5",{attrs:{id:"_1-4-4-6-案例六"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-4-6-案例六"}},[t._v("#")]),t._v(" 1.4.4.6. 案例六：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("short")]),t._v(" s "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100L")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ??? result = b + s + n;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 问变量 result 是什么类型的？long")]),t._v("\n")])])]),s("p",[t._v("变量 "),s("code",[t._v("b")]),t._v(" 是 "),s("code",[t._v("byte")]),t._v(" 类型的，变量 "),s("code",[t._v("s")]),t._v(" 是 "),s("code",[t._v("short")]),t._v(" 类型的，变量 "),s("code",[t._v("n")]),t._v(" 是 "),s("code",[t._v("long")]),t._v(" 类型的。")]),t._v(" "),s("p",[s("code",[t._v("byte")]),t._v("，"),s("code",[t._v("short")]),t._v("，"),s("code",[t._v("char")]),t._v(" 类型的变量在参与运算的时候，变量里面的值会直接先提升为 "),s("code",[t._v("int")]),t._v("。")]),t._v(" "),s("p",[t._v("第一步：变量 "),s("code",[t._v("b")]),t._v(" 和变量 "),s("code",[t._v("s")]),t._v(" 里面的值会先提升为 "),s("code",[t._v("int")]),t._v(" 参与运算。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("int + int + long\n")])])]),s("p",[t._v("第二步：而 "),s("code",[t._v("long")]),t._v(" 类型的取值范围是大于 "),s("code",[t._v("int")]),t._v(" 的取值范围的， 所以变量 "),s("code",[t._v("b")]),t._v(" 和变量 "),s("code",[t._v("s")]),t._v(" 里面的值会再次提升为 "),s("code",[t._v("long")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("long + long + long。\n")])])]),s("p",[t._v("所以最终结果是 "),s("code",[t._v("long")]),t._v(" 类型的。")]),t._v(" "),s("h3",{attrs:{id:"_1-5-强制转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-强制转换"}},[t._v("#")]),t._v(" 1.5. 强制转换")]),t._v(" "),s("h4",{attrs:{id:"_1-5-1-概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-1-概念"}},[t._v("#")]),t._v(" 1.5.1. 概念")]),t._v(" "),s("p",[t._v("如果要把一个取值范围大的数据或者变量赋值给另一个取值范围小的变量，是不允许直接操作。")]),t._v(" "),s("p",[t._v("如果一定要这么干，就需要加入强制转换。")]),t._v(" "),s("h4",{attrs:{id:"_1-5-2-书写格式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-2-书写格式"}},[t._v("#")]),t._v(" 1.5.2. 书写格式")]),t._v(" "),s("p",[s("code",[t._v("目标数据类型 变量名 = （目标数据类型）被强转的数据；")])]),t._v(" "),s("p",[t._v("简单理解：")]),t._v(" "),s("ul",[s("li",[t._v("要转成什么类型的，那么就在小括号中写什么类型就可以了。")])]),t._v(" "),s("p",[t._v("案例：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OperatorDemo2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12.3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//12")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("注意点：")]),t._v(" "),s("ul",[s("li",[t._v("强制转换有可能会导致数据发生错误。（数据的精度丢失）")])]),t._v(" "),s("h3",{attrs:{id:"_1-6-字符串的-操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-6-字符串的-操作"}},[t._v("#")]),t._v(" 1.6. 字符串的 "),s("code",[t._v("+")]),t._v(" 操作")]),t._v(" "),s("h4",{attrs:{id:"_1-6-1-核心技巧"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-6-1-核心技巧"}},[t._v("#")]),t._v(" 1.6.1. 核心技巧")]),t._v(" "),s("ul",[s("li",[t._v("当 "),s("code",[t._v("+")]),t._v(" 操作中出现字符串时，此时就是字符串的连接符，会将前后的数据进行拼接，并产生一个新的字符串。")]),t._v(" "),s("li",[t._v("当连续进行 "),s("code",[t._v("+")]),t._v(" 操作时，从左到右逐个执行的。")])]),t._v(" "),s("h4",{attrs:{id:"_1-6-2-案例1"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-6-2-案例1"}},[t._v("#")]),t._v(" 1.6.2. 案例1")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abc"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])])]),s("p",[t._v('结果："1abc1"')]),t._v(" "),s("p",[t._v("解释：")]),t._v(" "),s("ul",[s("li",[t._v("第一步： "),s("code",[t._v('1 + "abc"')]),t._v("。在这个过程中，有字符串参与的，所以做的是拼接操作，产生一个新的字符串"),s("code",[t._v("1abc")])]),t._v(" "),s("li",[t._v("第二步：  "),s("code",[t._v('"1abc" + 1')]),t._v("。这个过程中，有字符串参与的，所以做的也是拼接操作，产生一个新的字符串"),s("code",[t._v("1abc1")])])]),t._v(" "),s("h4",{attrs:{id:"_1-6-3-案例2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-6-3-案例2"}},[t._v("#")]),t._v(" 1.6.3. 案例2")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abc"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])])]),s("p",[t._v("结果："),s("code",[t._v('"3abc21"')])]),t._v(" "),s("p",[t._v("解释：")]),t._v(" "),s("ul",[s("li",[t._v("第一步："),s("code",[t._v("1 + 2")]),t._v(" 。在这个过程中，没有字符串参与的，所以做的是加法运算，结果为3。")]),t._v(" "),s("li",[t._v("第二步："),s("code",[t._v('3 + "abc"')]),t._v('。在这个过程中，有字符串参与的，所以做的是拼接操作，产生一个新的字符串"3abc"。')]),t._v(" "),s("li",[t._v("第三步："),s("code",[t._v('"3abc" + 2')]),t._v('。在这个过程中，有字符串参与的，所以做的是拼接操作，产生一个新的字符串"3abc2"。')]),t._v(" "),s("li",[t._v("第四步："),s("code",[t._v('"3abc2" + 1')]),t._v("。在这个过程中，有字符串参与的，所以做的是拼接操作，产生一个新的字符串“3abc21”")])]),t._v(" "),s("h4",{attrs:{id:"_1-6-4-案例3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-6-4-案例3"}},[t._v("#")]),t._v(" 1.6.4. 案例3")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"黑默丁格"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"我的名字是"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("结果： "),s("code",[t._v("我的名字是黑默丁格")])]),t._v(" "),s("p",[t._v("解释：当字符串跟变量相加的时候，实际上是跟变量里面的值进行拼接。")]),t._v(" "),s("h3",{attrs:{id:"_1-7-字符的-操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-7-字符的-操作"}},[t._v("#")]),t._v(" 1.7. 字符的 "),s("code",[t._v("+")]),t._v(" 操作")]),t._v(" "),s("h4",{attrs:{id:"_1-7-1-规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-7-1-规则"}},[t._v("#")]),t._v(" 1.7.1. 规则")]),t._v(" "),s("p",[t._v("当 "),s("code",[t._v("+")]),t._v(" 操作中出现了字符，会拿着字符到计算机内置的 ASCII 码表中去查对应的数字，然后再进行计算。")]),t._v(" "),s("h4",{attrs:{id:"_1-7-2-案例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-7-2-案例"}},[t._v("#")]),t._v(" 1.7.2. 案例")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token char"}},[t._v("'a'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//97")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token char"}},[t._v("'a'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 98")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token char"}},[t._v("'a'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "aa"')]),t._v("\n")])])]),s("p",[t._v("ASCII码表中：")]),t._v(" "),s("p",[s("code",[t._v("'a'")]),t._v("   -----    97")]),t._v(" "),s("p",[s("code",[t._v("'A'")]),t._v("   -----    65")]),t._v(" "),s("h3",{attrs:{id:"_1-8-算术运算符的总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-8-算术运算符的总结"}},[t._v("#")]),t._v(" 1.8. 算术运算符的总结")]),t._v(" "),s("p",[t._v("分类：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("+")]),t._v(" "),s("code",[t._v("-")]),t._v(" "),s("code",[t._v("*")]),t._v(" "),s("code",[t._v("/")]),t._v(" "),s("code",[t._v("%")]),t._v("  这些操作跟小学数学几乎是一模一样的。")])]),t._v(" "),s("p",[t._v("注意点：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("/")]),t._v(" 和 "),s("code",[t._v("%")]),t._v(" 的区别：他们两个都是做除法运算，"),s("code",[t._v("/")]),t._v(" 取结果的商。"),s("code",[t._v("%")]),t._v(" 取结果的余数。")]),t._v(" "),s("li",[t._v("整数操作只能得到整数，如果想要得到小数，必须有浮点数参与运算。")])]),t._v(" "),s("p",[t._v("算术运算符的高级用法：")]),t._v(" "),s("ul",[s("li",[t._v("是以 "),s("code",[t._v("+")]),t._v(" 为例进行的讲解，其余减法，乘法，除法的运算规则也是一样的。")]),t._v(" "),s("li",[t._v("特例：字符串只有 "),s("code",[t._v("+")]),t._v(" 操作，没有其他操作。")])]),t._v(" "),s("h2",{attrs:{id:"_2-自增自减运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-自增自减运算符"}},[t._v("#")]),t._v(" 2. 自增自减运算符")]),t._v(" "),s("h3",{attrs:{id:"_2-1-分类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-分类"}},[t._v("#")]),t._v(" 2.1. 分类")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("++")]),t._v("  自增运算符")]),t._v(" "),s("li",[s("code",[t._v("--")]),t._v("  自减运算符")])]),t._v(" "),s("p",[s("code",[t._v("++")]),t._v("：就是把变量里面的值 +1")]),t._v(" "),s("p",[s("code",[t._v("--")]),t._v("：就是把变量里面的值 -1")]),t._v(" "),s("h3",{attrs:{id:"_2-2-使用方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-使用方式"}},[t._v("#")]),t._v(" 2.2. 使用方式")]),t._v(" "),s("ul",[s("li",[t._v("(先加后用) 放在变量的前面，我们叫做 先++。 比如："),s("code",[t._v("++a")])]),t._v(" "),s("li",[t._v("(先用后加) 放在变量的后面，我们叫做 后++。 比如："),s("code",[t._v("a++")])])]),t._v(" "),s("h3",{attrs:{id:"_2-3-注意点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-注意点"}},[t._v("#")]),t._v(" 2.3. 注意点")]),t._v(" "),s("p",[t._v("不管是 先++，还是 后++。单独写在一行的时候，运算结果是一模一样的。")]),t._v(" "),s("h3",{attrs:{id:"_2-4-案例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-案例"}},[t._v("#")]),t._v(" 2.4. 案例")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//++")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\na"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("就是让变量 a 里面的值 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 11")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 就是让变量 a 里面的值 + 1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 12")]),t._v("\n")])])]),s("h3",{attrs:{id:"_2-5-自增自减运算符的应用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-自增自减运算符的应用场景"}},[t._v("#")]),t._v(" 2.5. 自增自减运算符的应用场景")]),t._v(" "),s("p",[t._v("某些情况下，变量需要进行加1或者减1的时候使用。")]),t._v(" "),s("p",[t._v("比如：过生日多一岁，就用到了自增运算符。")]),t._v(" "),s("p",[t._v("比如：购物商场中，选择商品数量，也用到了自增或者自减运算符。")]),t._v(" "),s("p",[t._v("比如：统计很多数据中，有多少个数据满足要求，也用到了自增运算符。")]),t._v(" "),s("h2",{attrs:{id:"_3-赋值运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-赋值运算符"}},[t._v("#")]),t._v(" 3. 赋值运算符")]),t._v(" "),s("p",[t._v("最为常用的：\t"),s("code",[t._v("=")])]),t._v(" "),s("p",[t._v("运算过程：就是把等号右边的结果赋值给左边的变量")]),t._v(" "),s("p",[t._v("案例：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OperatorDemo6")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1.最为简单的赋值运算符用法")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//就是把10赋值给变量a")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2.如果等号右边需要进行计算。")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//先计算等号右边的，把计算的结果赋值给左边的变量")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//3.特殊的用法")]),t._v("\n        a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//先计算等号右边的，把计算的结果赋值给左边的变量")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//20")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"_3-1-扩展赋值运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-扩展赋值运算符"}},[t._v("#")]),t._v(" 3.1. 扩展赋值运算符")]),t._v(" "),s("h4",{attrs:{id:"_3-1-1-分类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-1-分类"}},[t._v("#")]),t._v(" 3.1.1. 分类")]),t._v(" "),s("p",[s("code",[t._v("+=")]),t._v("、"),s("code",[t._v("-=")]),t._v("、"),s("code",[t._v("*=")]),t._v("、"),s("code",[t._v("/=")]),t._v("、"),s("code",[t._v("%=")])]),t._v(" "),s("h4",{attrs:{id:"_3-1-2-运算规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-2-运算规则"}},[t._v("#")]),t._v(" 3.1.2. 运算规则")]),t._v(" "),s("p",[t._v("就是把左边跟右边进行运算，把最终的结果赋值给左边，对右边没有任何影响。")]),t._v(" "),s("h4",{attrs:{id:"_3-1-3-案例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-3-案例"}},[t._v("#")]),t._v(" 3.1.3. 案例")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OperatorDemo7")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//扩展赋值运算符")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//把左边和右边相加，再把最终的结果赋值给左边，对右边没有任何影响")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 相当于 a = a + b;")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//30")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//20")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"_3-1-4-注意点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-4-注意点"}},[t._v("#")]),t._v(" 3.1.4. 注意点")]),t._v(" "),s("p",[t._v("扩展的赋值运算符背后隐藏了一个强制转换。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OperatorDemo8")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//a += b;")]),t._v("\n        a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//30")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("code",[t._v("byte a += b")]),t._v("， 实际上相当于 "),s("code",[t._v("byte a = (byte)(a + b)")]),t._v(";")]),t._v(" "),s("h2",{attrs:{id:"_4-关系运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-关系运算符"}},[t._v("#")]),t._v(" 4. 关系运算符")]),t._v(" "),s("p",[t._v("又叫比较运算符，其实就是拿着左边跟右边进行了比较而已。")]),t._v(" "),s("h3",{attrs:{id:"_4-1-分类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-分类"}},[t._v("#")]),t._v(" 4.1. 分类")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("符号")]),t._v(" "),s("th",[t._v("解释")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("==")]),t._v(" "),s("td",[t._v("就是判断左边跟右边是否相等，如果成立就是true，如果不成立就是false")])]),t._v(" "),s("tr",[s("td",[t._v("!=")]),t._v(" "),s("td",[t._v("就是判断左边跟右边是否不相等，如果成立就是true，如果不成立就是false")])]),t._v(" "),s("tr",[s("td",[t._v(">")]),t._v(" "),s("td",[t._v("就是判断左边是否大于右边，如果成立就是true，如果不成立就是false")])]),t._v(" "),s("tr",[s("td",[t._v(">=")]),t._v(" "),s("td",[t._v("就是判断左边是否大于等于右边，如果成立就是true，如果不成立就是false")])]),t._v(" "),s("tr",[s("td",[t._v("<")]),t._v(" "),s("td",[t._v("就是判断左边是否小于右边，如果成立就是true，如果不成立就是false")])]),t._v(" "),s("tr",[s("td",[t._v("<=")]),t._v(" "),s("td",[t._v("就是判断左边是否小于等于右边，如果成立就是true，如果不成立就是false")])])])]),t._v(" "),s("h3",{attrs:{id:"_4-2-注意点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-注意点"}},[t._v("#")]),t._v(" 4.2. 注意点")]),t._v(" "),s("ul",[s("li",[t._v("关系运算符最终的结果一定是布尔类型的。要么是true，要么是false")]),t._v(" "),s("li",[t._v("在写==的时候，千万不要写成=")])]),t._v(" "),s("h2",{attrs:{id:"_5-逻辑运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-逻辑运算符"}},[t._v("#")]),t._v(" 5. 逻辑运算符")]),t._v(" "),s("h3",{attrs:{id:"_5-1-和-的使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-和-的使用"}},[t._v("#")]),t._v(" 5.1. "),s("code",[t._v("&")]),t._v(" 和 "),s("code",[t._v("|")]),t._v(" 的使用")]),t._v(" "),s("p",[s("code",[t._v("&")]),t._v("：逻辑与（而且）， 两边都为真，结果才是真，只要有一个为假，那么结果就是假。")]),t._v(" "),s("p",[s("code",[t._v("|")]),t._v("：逻辑或（或者）， 两边都为假，结果才是假，只要有一个为真，那么结果就是真。")]),t._v(" "),s("p",[t._v("代码示例：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// &  //两边都是真，结果才是真。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"==================================="')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// | 或  //两边都是假，结果才是假，如果有一个为真，那么结果就是真。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n")])])]),s("h4",{attrs:{id:"_5-1-1-使用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-1-使用场景"}},[t._v("#")]),t._v(" 5.1.1. 使用场景")]),t._v(" "),s("p",[t._v("根据固定的场景，来选择使用 "),s("code",[t._v("&")]),t._v(" 还是使用 "),s("code",[t._v("|")])]),t._v(" "),s("p",[t._v("用户登录:")]),t._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("用户名输入正确  &amp; 密码输入正确\n\n    因为只有用户名和密码同时都正确了，那么才能成功登录，只要有一个失败了都不行。\n\n使用技巧：\n\n    当我们需要同时满足左边和右边两种情况时，可以使用且\n")])])]),s("p",[t._v("丈母娘选女婿:")]),t._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("丈母娘：女婿啊，你要么买个房子，要么买辆车。就可以把我的小棉袄穿走了。\n\n    买个房子 | 买辆车\n    \n    两个条件中，只要满足其中一个，就可以穿走小棉袄了。\n    \n使用技巧：\n\n    当两种条件只要满足其中一个的时候，可以使用或\n")])])]),s("h3",{attrs:{id:"_5-2-异或-的使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-异或-的使用"}},[t._v("#")]),t._v(" 5.2. "),s("code",[t._v("^")]),t._v("（异或）的使用")]),t._v(" "),s("p",[t._v("在以后用的不多，了解一下即可。")]),t._v(" "),s("p",[t._v("计算规则：如果两边相同，结果为 "),s("code",[t._v("false")]),t._v("，如果两边不同，结果为 "),s("code",[t._v("true")])]),t._v(" "),s("p",[t._v("代码示例：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//^   //左右不相同，结果才是true，左右相同结果就是false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n")])])]),s("h3",{attrs:{id:"_5-3-取反-的使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-取反-的使用"}},[t._v("#")]),t._v(" 5.3. "),s("code",[t._v("!")]),t._v("（取反）的使用")]),t._v(" "),s("p",[t._v("是取反，也叫做非。")]),t._v(" "),s("p",[t._v("计算规则："),s("code",[t._v("false")]),t._v(" 取反就是 "),s("code",[t._v("true")]),t._v("，"),s("code",[t._v("true")]),t._v(" 取反就是 "),s("code",[t._v("false")])]),t._v(" "),s("p",[t._v("温馨提示："),s("strong",[t._v("取反最多只用一个。")])]),t._v(" "),s("p",[t._v("代码示例：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//注意点：取反最多只用一个。")]),t._v("\n")])])]),s("h3",{attrs:{id:"_5-4-短路逻辑运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-短路逻辑运算符"}},[t._v("#")]),t._v(" 5.4. 短路逻辑运算符")]),t._v(" "),s("p",[t._v("分类：  "),s("code",[t._v("&&")]),t._v(" "),s("code",[t._v("||")])]),t._v(" "),s("h4",{attrs:{id:"_5-4-1"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-1"}},[t._v("#")]),t._v(" 5.4.1. &&")]),t._v(" "),s("p",[t._v("运算结果跟 "),s("code",[t._v("&")]),t._v(" 是一模一样的，只不过具有短路效果。")]),t._v(" "),s("h4",{attrs:{id:"_5-4-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-2"}},[t._v("#")]),t._v(" 5.4.2. ||")]),t._v(" "),s("p",[t._v("运算结果跟 "),s("code",[t._v("|")]),t._v(" 是一模一样的。只不过具有短路效果。")]),t._v(" "),s("h4",{attrs:{id:"_5-4-3-逻辑核心"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-3-逻辑核心"}},[t._v("#")]),t._v(" 5.4.3. 逻辑核心")]),t._v(" "),s("p",[t._v("当左边不能确定整个表达式的结果，右边才会执行。")]),t._v(" "),s("p",[t._v("当左边能确定整个表达式的结果，那么右边就不会执行了。从而提高了代码的运行效率。")]),t._v(" "),s("h4",{attrs:{id:"_5-4-4-总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-4-总结"}},[t._v("#")]),t._v(" 5.4.4. 总结")]),t._v(" "),s("p",[s("code",[t._v("&&")]),t._v(" 和 "),s("code",[t._v("&")]),t._v(" 、"),s("code",[t._v("||")]),t._v(" 和 "),s("code",[t._v("|")]),t._v(" 的运行结果都是一模一样的。")]),t._v(" "),s("p",[t._v("但是短路逻辑运算符可以提高程序的运行效率。")]),t._v(" "),s("h4",{attrs:{id:"_5-4-5-建议"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-5-建议"}},[t._v("#")]),t._v(" 5.4.5. 建议")]),t._v(" "),s("p",[t._v("最为常用： "),s("code",[t._v("&&")]),t._v(" "),s("code",[t._v("||")]),t._v("   ``")]),t._v(" "),s("h2",{attrs:{id:"_6-三元运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-三元运算符"}},[t._v("#")]),t._v(" 6. 三元运算符")]),t._v(" "),s("p",[t._v("又叫做：三元表达式或者问号冒号表达式。")]),t._v(" "),s("h3",{attrs:{id:"_6-1-格式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-格式"}},[t._v("#")]),t._v(" 6.1. 格式")]),t._v(" "),s("p",[s("code",[t._v("关系表达式 ？ 表达式1 ：表达式2 ；")])]),t._v(" "),s("h3",{attrs:{id:"_6-2-计算规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-计算规则"}},[t._v("#")]),t._v(" 6.2. 计算规则")]),t._v(" "),s("ul",[s("li",[t._v("计算关系表达式的值。")]),t._v(" "),s("li",[t._v("如果关系表达式的值为真，那么执行表达式1。")]),t._v(" "),s("li",[t._v("如果关系表达式的值为假，那么执行表达式2。")])]),t._v(" "),s("h3",{attrs:{id:"_6-3-注意点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-注意点"}},[t._v("#")]),t._v(" 6.3. 注意点")]),t._v(" "),s("p",[t._v("三元运算符的最终结果一定要被使用，要么赋值给一个变量，要么直接打印出来。")]),t._v(" "),s("h3",{attrs:{id:"_6-4-案例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-案例"}},[t._v("#")]),t._v(" 6.4. 案例")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OperatorDemo12")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//需求：求两个数的较大值")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//格式：关系表达式 ？ 表达式1 ： 表达式2 ；")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//注意点：")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//三元运算符的最终结果一定要被使用。")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//要么赋值给一个变量，要么直接输出。")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" max "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("  a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("max"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"_6-5-练习1-两只老虎"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-5-练习1-两只老虎"}},[t._v("#")]),t._v(" 6.5. 练习1-两只老虎")]),t._v(" "),s("p",[t._v("需求：")]),t._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("动物园里有两只老虎，两只老虎的体重分别为通过键盘录入获得，\n\n请用程序实现判断两只老虎的体重是否相同。\n")])])]),s("p",[t._v("代码：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1.获取两只老虎的体重")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Scanner")]),t._v(" sc "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Scanner")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("in"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"请输入第一只老虎的体重"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" weight1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"请输入第二只老虎的体重"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" weight2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2.利用三元运算符求出最终结果")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" weight1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" weight2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"相同"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"不相同"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"_6-6-练习2-求三个数的最大值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-6-练习2-求三个数的最大值"}},[t._v("#")]),t._v(" 6.6. 练习2-求三个数的最大值")]),t._v(" "),s("p",[t._v("需求：")]),t._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("一座寺庙里住着三个和尚，已知他们的身高分别为150cm、210cm、165cm。\n\n请用程序实现获取这三个和尚的最高身高。\n")])])]),s("p",[t._v("代码：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1.定义三个变量记录和尚的身高")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" height1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("150")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" height2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("210")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" height3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("165")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2.利用三元运算符求出两个数中的较大值。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" temp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" height1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" height2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" height1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" height2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//3.求出最终的结果")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" max "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" temp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" height3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" temp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" height3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("max"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"_7-运算符的优先级"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-运算符的优先级"}},[t._v("#")]),t._v(" 7. 运算符的优先级")]),t._v(" "),s("p",[t._v("在 Java 中涉及了很多的运算符，每一种运算符都有各自的优先级。但是这些优先级不需要记忆。")]),t._v(" "),s("p",[t._v("咱们只要知道其中一点：小括号优先于所有。")]),t._v(" "),s("h2",{attrs:{id:"_8-原码、反码、补码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-原码、反码、补码"}},[t._v("#")]),t._v(" 8. 原码、反码、补码")]),t._v(" "),s("p",[t._v("TODO")])])}),[],!1,null,null,null);s.default=e.exports}}]);